import { ErrorState } from "./utils/error";
import type { CallbackNameKey, CallbackResult, Callbacks } from "./utils/callbacks";
import type { ErrorStateKey } from "./utils/error";
declare type Options = IntersectionObserverInit;
export default class LazyLoadElement {
    private observer;
    private observerOptions;
    private mutationObserver;
    private callbacks;
    private appliedElements;
    constructor(container: Element, options?: IntersectionObserverInit, callbacks?: Callbacks);
    dispose(): void;
    private init;
    private setCallbacks;
    private isGroup;
    private showGroup;
    private show;
    private hideGroup;
    private hide;
    addObserve(container: Element): void;
    private observerHandler;
    private addMutationObserver;
    getAppliedElements(): Element[];
    getShowedElements(): Element[];
    private addAppliedElements;
    private addAppliedElement;
    private deleteAppliedElement;
    private resetAppliedElements;
}
export { ErrorState as MyLazyLoadElementsErrorState, };
export type { Options as MyLazyLoadElementsOptions, CallbackNameKey as MyLazyLoadElementsEventNameKey, ErrorStateKey as MyLazyLoadElementsErrorStateKey, CallbackResult as MyLazyLoadElementsLazyLoadElementResult, Callbacks as MyLazyLoadElementsCallbacks, };
